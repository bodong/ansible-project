#!/bin/bash
#
# Copyright 2018 Red Hat, Inc.
#
# NAME
#     lab-file-template - grading script for DO407 RHAE-2.7 GE file-template
#
# SYNOPSIS
#     lab-file-template {setup|cleanup}
#
#        setup   - prepare the system for starting the lab
#        cleanup - perform post-lab cleanup
#
# DESCRIPTION
#     This script creates the jinja2 working directory and an ansible.cfg
#     configuration file that uses the inventory file created durint the 
#     exercise. The cleanup verbs sets the /etc/motd file on managed host 
#     to its original state.
#
# CHANGELOG
#   * Mon Dec  3 2018 Victor Costea <vcostea@redhat.com>
#   - original code

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
targeta='servera'
targetw='workstation'

labname='file-template'
student_home_dir='/home/student'
lab_dir="${student_home_dir}/${labname}"
lab_cfg="${labname}/ansible.cfg"
lab_inv="${labname}/files/inventory"

ansible_j2template_file=motd.j2
ansible_playbook_file=motd.yml
ansible_inventory_file=inventory

# This defines which subcommands are supported (setup, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup cleanup)

function lab_setup {

  reqd_package='ansible'

  print_header "Setting up ${targetw} for lab exercise work:"
  host_reachable ${targeta}
  host_reachable ${targetw}

  # Check for lab prerequisites.
  pad " . The ${reqd_package} package is installed on ${targetw}"
  if rpm -q --quiet ${reqd_package}
  then
    print_SUCCESS
  else
    if yum install -y ${reqd_package}
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  fi

  pad " . Create exercise directory"
  if ! [ -d "${lab_dir}" ]; then
    mkdir -p ${lab_dir}/files
    chown -R student.student ${lab_dir}
    print_SUCCESS
  elif [ -d "${lab_dir}" ]; then
      print_SUCCESS
  else
    print_FAIL
  fi

  pad " . Download Ansible configuration"
  cmd1="curl http://materials.example.com/labs/${lab_cfg} > ${lab_cfg}"
  if su - student -c "${ssh} ${targetw} '${cmd1}'"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " . Download Ansible inventory"
  cmd1="curl http://materials.example.com/labs/${labname}/${ansible_inventory_file} > ${lab_inv}"
  if su - student -c "${ssh} ${targetw} '${cmd1}'"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " . Downloading ${ansible_j2template_file}"
  if wget http://materials.example.com/labs/${labname}/${ansible_j2template_file} -O ${lab_dir}/files/${ansible_j2template_file}; then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " . Downloading ${ansible_playbook_file}"
  if wget http://materials.example.com/labs/${labname}/${ansible_playbook_file} -O ${lab_dir}/files/${ansible_playbook_file}; then
    print_SUCCESS
  else
    print_FAIL
  fi

  print_line
}

function lab_cleanup {

  print_header "Cleaning up the exercise on ${targetw}:"
  host_reachable ${targeta}
  host_reachable ${targetw}

  pad " . Removing motd on ${targeta}"
  if ${ssh} ${targeta} "rm -f /etc/motd;touch /etc/motd"; then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " . Removing motd on ${targetw}"
  if rm -f /etc/motd;touch /etc/motd; then
    print_SUCCESS
  else
    print_FAIL
  fi

  print_line
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
