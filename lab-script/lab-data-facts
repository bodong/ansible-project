#!/bin/bash
#
# Copyright 2016 Red Hat, Inc.
#
# NAME
#     lab-data-facts - grading script for DO407
#
# SYNOPSIS
#     lab-data-facts {setup|cleanup}
#
#        setup   - prepare the system for starting the lab
#        cleanup - perform post-lab cleanup (not comprehensive like reset)
#
# DESCRIPTION
#     This script, based on singular argument, either does setup, grading,
#     cleanup, reset, or solve for the lab for managing variable facts.
#
# CHANGELOG
#   * Tue Nov 7 2018 Chen Chang <cchang@redhat.com>
#   - Update for 2.7 release
#   * Wed Jun  8 2016 Chen Chang <cchang@redhat.com>
#   - Hide warning message
#   * Mon May 16 2016 George Hacker <ghacker@redhat.com>
#   - lab_cleanup no longer removes the student's work
#   - lab_setup provides student with a working config and inventory
#   - changed pkg parameter for yum module to name
#   * Tue May  3 2016 George Hacker <ghacker@redhat.com>
#   - changed state of service from 'running' to 'started'
#   * Wed Mar 30 2016 Razique Mahroua <rmahroua@redhat.com>
#   - original code

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'

control_node='workstation'

# Conditional to make the script compatible with the
# demo version.
if [[ ${lab_demo_mode} == "demo" ]]; then
  env="demo"
else
  env="dev"
fi

labname=data-facts
working_dir="/home/student/${labname}"
ansible_cfg_file=${working_dir}/ansible.cfg
ansible_hst_file=${working_dir}/inventory
ansible_playbook_file=${working_dir}/playbook.yml
ansible_facts_playbook_file=${working_dir}/setup_facts.yml
ansible_local_fact_file=${working_dir}/custom.fact
ansible_remote_fact_file=/etc/ansible/facts.d/custom.fact
ansible_user=devops
ansible_target=servera.lab.example.com
ansible_pkgs=(httpd)

# This defines which subcommands are supported (solve, reset, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup grade cleanup solve reset)

function lab_setup {

  reqd_package='ansible'
  host_reachable ${control_node}
  print_header "Setting up ${control_node} for lab exercise work:"

  setup_check_ansible workstation

  setup_create_lab_dir $labname

  cat << EOF > ${ansible_cfg_file}
[defaults]
inventory   = ${ansible_hst_file##*/}
remote_user = ${ansible_user}

[privilege_escalation]
become      = true
EOF

  cat << EOF > ${ansible_hst_file}
[webserver]
${ansible_target}
EOF
  chown -R student ${working_dir}

  print_line
}

function lab_cleanup {

  host_reachable ${ansible_target}
  print_header "Cleaning up the lab on ${ansible_target}:"

  for i in "${ansible_pkgs[@]}"; do
    pad " · Removing $i"
    if ${ssh} ${ansible_target} yum -y remove "$i"; then
      print_SUCCESS
    else
      print_FAIL
    fi
  done

  pad " · Removing custom facts"
  if ${ssh} ${ansible_target} rm -rf ${ansible_remote_fact_file}; then
      print_SUCCESS
  else
    print_FAIL
  fi

  print_line
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
