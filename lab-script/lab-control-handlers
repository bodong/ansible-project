#!/bin/bash
#
# Copyright 2016 Red Hat, Inc.
#
# NAME
#     lab-task-control-handlers - grading script for DO407
#
# SYNOPSIS
#     lab-task-control-handlers {setup|grade|cleanup|solve|reset}
#
#        setup   - prepare the system for starting the lab
#        grade   - perform evaluation steps on the system
#        cleanup - perform post-lab cleanup (not comprehensive like reset)
#        solve   - do the lab exercise for the student (may call setup)
#        reset   - avoid resetting a machine (not preferred)
#
# DESCRIPTION
#     This script, based on singular argument, either does setup, grading,
#     cleanup, reset, or solve for the lab for managing handlers.
#
# CHANGELOG
#   * Tue May 17 2016 George Hacker <ghacker@redhat.com>
#   - lab_cleanup no longer removes the student's work
#   - lab_setup provides student with a working config and inventory
#   - changed pkg parameter for yum module to name
#   * Tue May  3 2016 George Hacker <ghacker@redhat.com>
#   - corrected value of ${ansible_playbook_file}
#   - changed print_SUCCESS calls to print_PASS in lab_grade
#   * Thu Apr 14 2016 Razique Mahroua <rmahroua@redhat.com>
#   - original code

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
runuser='runuser student -c'

control_node='workstation'

# Conditional to make the script compatible with the
# demo version.
if [[ ${lab_demo_mode} == "demo" ]]; then
  env="demo"
else
  env="dev"
fi

labname="control-handlers"
working_dir="/home/student/$labname"
ansible_cfg_file=${working_dir}/ansible.cfg
ansible_hst_file=${working_dir}/inventory
ansible_playbook_file=${working_dir}/configure_db.yml
ansible_db_file="http://materials.example.com/labs/$labname"
ansible_user=devops
ansible_target=servera.lab.example.com
ansible_pkgs=(mariadb-server MySQL-python)

# This defines which subcommands are supported (solve, reset, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup cleanup)

function lab_setup {

  #From labtool.do407.shlib
  #Check Ansible is installed.
  setup_check_ansible workstation

  #From labtool.do407.shlib
  #Create working directory for lab artifacts.
  setup_create_lab_dir $labname

  #From labtool.do407.shlib
  #Download Ansible Inventory
  setup_download_inventory_file $labname

  #From labtool.do407.shlib
  #Download ansible.cfg
  setup_download_ansible_cfg $labname

  #From labtool.do407.shlib
  pad ' · Download configure_db.yml'
  _download_file configure_db.yml $labname

  print_line
}


function lab_cleanup {

  host_reachable ${ansible_target}
  print_line "Cleaning up lab ${labname} on ${ansible_target}:"

  print_line " · Removing packages"
  for i in "${ansible_pkgs[@]}"; do
    pad "   · Removing $i"
    if ${ssh} ${ansible_target} yum -y remove "$i" &>/dev/null; then
      print_SUCCESS
    else
      print_FAIL
    fi
  done

  pad  " · Removing  /etc/my.cnf"
  if ${ssh} ${ansible_target} 'rm -f /etc/my.cnf' &>/dev/null; then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad  " · Removing  /var/lib/mysql"
  if ${ssh} ${ansible_target} 'rm -Rf /var/lib/mysql' &>/dev/null; then
    print_SUCCESS
  else
    print_FAIL
  fi



  echo
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
